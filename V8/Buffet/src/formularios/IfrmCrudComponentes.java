package formularios;

import clases.SQL;
import clases.listas.estArticulo;
import clases.listas.estComponente;
import java.awt.Color;
import java.io.*;
import java.util.ArrayList;
import java.util.Calendar;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

public class IfrmCrudComponentes extends javax.swing.JInternalFrame {

    SQL sql = new SQL();
    usuarioLogueado usuarioLogin = new usuarioLogueado();
    validacionesCampos validar = new validacionesCampos();
    static estComponente cab = null, ult = null;
    
    public IfrmCrudComponentes() {
        initComponents();
        
        
        /*String usu[] = sql.consultarUsuario(usuarioLogin.texto);
        
        if (!usu[4].equals("Administrador")){
            jButton1.setVisible(false);
            tbpCrudComponentes.remove(1);
        }*/
        
        cargarDatos();
        formColores("FFFFFF", "6699ff", "FFFFFF"); 
        tbpCrudComponentes.setTabPlacement(tbpCrudComponentes.BOTTOM);
         
        
        txtFiltrador.requestFocus();
        llenarTabla();
        botones(false);
        camposArticulos();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tbpCrudComponentes = new javax.swing.JTabbedPane();
        pnlTabla = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblComponentes = new javax.swing.JTable();
        pnlTituloTabla = new javax.swing.JPanel();
        lbTituloTabla = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        txtFiltrador = new javax.swing.JTextField();
        pnlFormulario = new javax.swing.JPanel();
        pnlTituloCom = new javax.swing.JPanel();
        lbTituloArt = new javax.swing.JLabel();
        lbCodigo = new javax.swing.JLabel();
        txtCodigo = new javax.swing.JTextField();
        lbTipo = new javax.swing.JLabel();
        lbNombre = new javax.swing.JLabel();
        lbUbicacion = new javax.swing.JLabel();
        pnlBotonesArticulo = new javax.swing.JPanel();
        btnNuevo = new javax.swing.JButton();
        btnRegistrar = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        lbDescripcion = new javax.swing.JLabel();
        lbCantidad = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtDescripcion = new javax.swing.JTextPane();
        cmbTipo = new javax.swing.JComboBox();
        cmbPro = new javax.swing.JComboBox();
        cmbacceso = new javax.swing.JComboBox();

        setMinimumSize(new java.awt.Dimension(70, 56));
        setPreferredSize(new java.awt.Dimension(620, 459));
        setRequestFocusEnabled(false);
        getContentPane().setLayout(null);

        tbpCrudComponentes.setFont(new java.awt.Font("Agency FB", 1, 16)); // NOI18N
        tbpCrudComponentes.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                tbpCrudComponentesMouseMoved(evt);
            }
        });

        pnlTabla.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                pnlTablaMouseMoved(evt);
            }
        });

        tblComponentes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Nombre", "Proceso", "TipoExp", "Acceso"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblComponentes);

        pnlTituloTabla.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                pnlTituloTablaMouseMoved(evt);
            }
        });

        lbTituloTabla.setFont(new java.awt.Font("Agency FB", 1, 70)); // NOI18N
        lbTituloTabla.setText("Expedientes");

        javax.swing.GroupLayout pnlTituloTablaLayout = new javax.swing.GroupLayout(pnlTituloTabla);
        pnlTituloTabla.setLayout(pnlTituloTablaLayout);
        pnlTituloTablaLayout.setHorizontalGroup(
            pnlTituloTablaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTituloTablaLayout.createSequentialGroup()
                .addGap(139, 139, 139)
                .addComponent(lbTituloTabla)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlTituloTablaLayout.setVerticalGroup(
            pnlTituloTablaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlTituloTablaLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lbTituloTabla, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jButton1.setFont(new java.awt.Font("Agency FB", 1, 18)); // NOI18N
        jButton1.setText("Transferir al formulario");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        txtFiltrador.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtFiltradorKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout pnlTablaLayout = new javax.swing.GroupLayout(pnlTabla);
        pnlTabla.setLayout(pnlTablaLayout);
        pnlTablaLayout.setHorizontalGroup(
            pnlTablaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addComponent(pnlTituloTabla, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlTablaLayout.createSequentialGroup()
                .addContainerGap(73, Short.MAX_VALUE)
                .addComponent(txtFiltrador, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(jButton1)
                .addContainerGap())
        );
        pnlTablaLayout.setVerticalGroup(
            pnlTablaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlTablaLayout.createSequentialGroup()
                .addComponent(pnlTituloTabla, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 195, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlTablaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtFiltrador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8))
        );

        tbpCrudComponentes.addTab("Tabla", pnlTabla);

        pnlFormulario.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                pnlFormularioMouseMoved(evt);
            }
        });

        pnlTituloCom.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                pnlTituloComMouseMoved(evt);
            }
        });

        lbTituloArt.setFont(new java.awt.Font("Agency FB", 1, 70)); // NOI18N
        lbTituloArt.setText(" Expediente ");

        javax.swing.GroupLayout pnlTituloComLayout = new javax.swing.GroupLayout(pnlTituloCom);
        pnlTituloCom.setLayout(pnlTituloComLayout);
        pnlTituloComLayout.setHorizontalGroup(
            pnlTituloComLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTituloComLayout.createSequentialGroup()
                .addGap(130, 130, 130)
                .addComponent(lbTituloArt)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlTituloComLayout.setVerticalGroup(
            pnlTituloComLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlTituloComLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lbTituloArt, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        lbCodigo.setFont(new java.awt.Font("Agency FB", 1, 20)); // NOI18N
        lbCodigo.setText("*Código");

        txtCodigo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCodigoKeyTyped(evt);
            }
        });

        lbTipo.setFont(new java.awt.Font("Agency FB", 1, 20)); // NOI18N
        lbTipo.setText("*Proceso");

        lbNombre.setFont(new java.awt.Font("Agency FB", 1, 20)); // NOI18N
        lbNombre.setText("*Nombre");

        lbUbicacion.setFont(new java.awt.Font("Agency FB", 1, 20)); // NOI18N
        lbUbicacion.setText("*Tipo Exp");

        pnlBotonesArticulo.setBackground(new java.awt.Color(255, 255, 255));

        btnNuevo.setFont(new java.awt.Font("Agency FB", 1, 17)); // NOI18N
        btnNuevo.setText("Nuevo");
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });

        btnRegistrar.setFont(new java.awt.Font("Agency FB", 1, 17)); // NOI18N
        btnRegistrar.setText("Registrar");
        btnRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarActionPerformed(evt);
            }
        });

        btnModificar.setFont(new java.awt.Font("Agency FB", 1, 17)); // NOI18N
        btnModificar.setText("Modificar");
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        btnEliminar.setFont(new java.awt.Font("Agency FB", 1, 17)); // NOI18N
        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlBotonesArticuloLayout = new javax.swing.GroupLayout(pnlBotonesArticulo);
        pnlBotonesArticulo.setLayout(pnlBotonesArticuloLayout);
        pnlBotonesArticuloLayout.setHorizontalGroup(
            pnlBotonesArticuloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBotonesArticuloLayout.createSequentialGroup()
                .addComponent(btnNuevo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnRegistrar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnModificar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        pnlBotonesArticuloLayout.setVerticalGroup(
            pnlBotonesArticuloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBotonesArticuloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(btnNuevo)
                .addComponent(btnModificar)
                .addComponent(btnEliminar)
                .addComponent(btnRegistrar))
        );

        lbDescripcion.setFont(new java.awt.Font("Agency FB", 1, 20)); // NOI18N
        lbDescripcion.setText("Descripción");

        lbCantidad.setFont(new java.awt.Font("Agency FB", 1, 20)); // NOI18N
        lbCantidad.setText("*acceso");

        jScrollPane2.setViewportView(txtDescripcion);

        cmbTipo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione un perfil ...", "Judicial", "Extrajudicial", "Consulta","Arbitral" }));
        cmbTipo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbTipoItemStateChanged(evt);
            }
        });
        cmbTipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbTipoActionPerformed(evt);
            }
        });

        cmbPro.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione un perfil ...", "herencia", "lesiones personales", "conciliacion" }));
        cmbPro.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbProItemStateChanged(evt);
            }
        });
        cmbPro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbProActionPerformed(evt);
            }
        });

        cmbacceso.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione un perfil ...", "Privado", "Publico" }));
        cmbacceso.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbaccesoItemStateChanged(evt);
            }
        });
        cmbacceso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbaccesoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlFormularioLayout = new javax.swing.GroupLayout(pnlFormulario);
        pnlFormulario.setLayout(pnlFormularioLayout);
        pnlFormularioLayout.setHorizontalGroup(
            pnlFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlTituloCom, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(pnlFormularioLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlFormularioLayout.createSequentialGroup()
                        .addComponent(pnlBotonesArticulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(102, 102, 102))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlFormularioLayout.createSequentialGroup()
                        .addGroup(pnlFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbNombre)
                            .addComponent(lbTipo)
                            .addComponent(lbCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(32, 32, 32)
                        .addGroup(pnlFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtNombre)
                            .addComponent(txtCodigo)
                            .addComponent(cmbPro, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(pnlFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlFormularioLayout.createSequentialGroup()
                                .addComponent(lbCantidad)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cmbacceso, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(pnlFormularioLayout.createSequentialGroup()
                                .addComponent(lbUbicacion)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cmbTipo, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlFormularioLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(lbDescripcion)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 385, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(66, 66, 66))
        );
        pnlFormularioLayout.setVerticalGroup(
            pnlFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFormularioLayout.createSequentialGroup()
                .addComponent(pnlTituloCom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(pnlFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlFormularioLayout.createSequentialGroup()
                        .addGroup(pnlFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlFormularioLayout.createSequentialGroup()
                                .addGroup(pnlFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lbUbicacion, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(pnlFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(pnlFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(lbCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(cmbacceso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(pnlFormularioLayout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addComponent(lbCodigo)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lbNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbTipo, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmbPro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(cmbTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addComponent(pnlBotonesArticulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(32, Short.MAX_VALUE))
        );

        tbpCrudComponentes.addTab("Formulario", pnlFormulario);

        getContentPane().add(tbpCrudComponentes);
        tbpCrudComponentes.setBounds(0, 0, 608, 397);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void pnlTituloTablaMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlTituloTablaMouseMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_pnlTituloTablaMouseMoved

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        String codigo = String.valueOf(tblComponentes.getValueAt(tblComponentes.getSelectedRow(), 0));

        estComponente nodoComponente = consultarComponente(codigo);

        if (codigo.equals("")){
            JOptionPane.showMessageDialog(null, "Debe seleccionar un registro de la tabla", "Atención", JOptionPane.ERROR_MESSAGE);
            txtFiltrador.requestFocus();
        }
        else
        if (nodoComponente != null){
            txtCodigo.setText(codigo);
            cmbPro.setActionCommand(nodoComponente.proceso);
            cmbTipo.setActionCommand(nodoComponente.tipoExp);
            txtNombre.setText(nodoComponente.nombre);
            txtDescripcion.setText(nodoComponente.descripcion);
            cmbacceso.setActionCommand(nodoComponente.acceso);

            tbpCrudComponentes.setSelectedIndex(1);
            txtCodigo.setEditable(false);
            botones(true);
            btnRegistrar.setEnabled(false);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void txtFiltradorKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFiltradorKeyReleased

        DefaultTableModel modelo = (DefaultTableModel)tblComponentes.getModel();
        TableRowSorter sorter = new TableRowSorter(modelo);
        tblComponentes.setRowSorter(sorter);
        sorter.setRowFilter(RowFilter.regexFilter("(?i)^"+ txtFiltrador.getText(), 0));
    }//GEN-LAST:event_txtFiltradorKeyReleased

    private void pnlTablaMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlTablaMouseMoved

    }//GEN-LAST:event_pnlTablaMouseMoved

    private void tbpCrudComponentesMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbpCrudComponentesMouseMoved

    }//GEN-LAST:event_tbpCrudComponentesMouseMoved

    private void pnlFormularioMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlFormularioMouseMoved

    }//GEN-LAST:event_pnlFormularioMouseMoved

    private void cmbProActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbProActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbProActionPerformed

    private void cmbProItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbProItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbProItemStateChanged

    private void cmbTipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbTipoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbTipoActionPerformed

    private void cmbTipoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbTipoItemStateChanged

        /*  switch (cmbTipo.getSelectedIndex()) {
            case 2:
            contrasenas(true);
            break;
            case 3:
            contrasenas(true);
            break;
            default:
            contrasenas(false);
            break;
        }*/
    }//GEN-LAST:event_cmbTipoItemStateChanged

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed

        String Componente = txtCodigo.getText();

        int option = JOptionPane.showConfirmDialog(rootPane, "¿Esta seguro de que desea eliminar el componente?");

        if(option == JOptionPane.YES_OPTION){
            estComponente p = consultarComponente(Componente);
            p.acceso = "Inexistente";
            modRegistro();
           cmbacceso.setActionCommand("Inexistente");
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed

        String codigo = txtCodigo.getText();
        String nombre = txtNombre.getText();
        String proceso = (String)cmbPro.getSelectedItem();
     
        String tipoExp =(String)cmbTipo .getSelectedItem();
        String acceso = (String)cmbacceso.getSelectedItem();
        String descripcion = txtDescripcion.getText();

        if (nombre.equals("")){
            JOptionPane.showMessageDialog(null, "Falta  llenar el campo de nombre", "Atención", JOptionPane.ERROR_MESSAGE);
            txtNombre.requestFocus();
        }
        else if (proceso.equals("")){
            JOptionPane.showMessageDialog(null, "Falta  llenar el campo de tipo de proceso ", "Atención", JOptionPane.ERROR_MESSAGE);
            cmbPro.requestFocus();
        }
        else if (tipoExp.equals("")){
            JOptionPane.showMessageDialog(null, "Falta  llenar dar la tipo de Expreso", "Atención", JOptionPane.ERROR_MESSAGE);
            cmbTipo.requestFocus();
        }
        else if (acceso.equals("")){
            JOptionPane.showMessageDialog(null, "Falta  llenar el campo de accesp", "Atención", JOptionPane.ERROR_MESSAGE);
            cmbacceso.requestFocus();
        }
        else {

            btnNuevoActionPerformed(evt);

            String miFila[] = {codigo, nombre, proceso,tipoExp, acceso};

            DefaultTableModel miTabla = (DefaultTableModel) this.tblComponentes.getModel();
            miTabla.removeRow(tblComponentes.getSelectedRow());
            miTabla.addRow(miFila);

            estComponente p = consultarComponente(codigo);

            p.nombre = nombre;
            p.proceso = proceso;
            p.tipoExp = tipoExp;
            p.descripcion = descripcion;
            p.acceso = acceso;

            modRegistro();
            JOptionPane.showMessageDialog(null, "El componente fue modificado con exito");
        }
    }//GEN-LAST:event_btnModificarActionPerformed

    private void btnRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarActionPerformed

        String codigo = txtCodigo.getText();
        String nombre = txtNombre.getText();
        String proceso = (String)cmbPro.getSelectedItem();
        String tipoExp = (String)cmbTipo.getSelectedItem();
        String acceso = (String)cmbacceso.getSelectedItem();
        String descripcion = txtDescripcion.getText();

        if (consultarComponente(codigo) != null){
            JOptionPane.showMessageDialog(null, "El componente ya está registrado", "Atención", JOptionPane.ERROR_MESSAGE);
            txtCodigo.requestFocus();
        }
        else if (nombre.equals("")){
            JOptionPane.showMessageDialog(null, "Falta  llenar el campo de nombre", "Atención", JOptionPane.ERROR_MESSAGE);
            txtNombre.requestFocus();
        }
        else if (proceso.equals("Seleccione un perfil ...")){
            JOptionPane.showMessageDialog(null, "Falta  llenar el campo de proceso", "Atención", JOptionPane.ERROR_MESSAGE);
            cmbPro.requestFocus();
        }
        else if (tipoExp.equals("Seleccione un perfil ...")){
            JOptionPane.showMessageDialog(null, "Falta  llenar dar la el tipo expediente ", "Atención", JOptionPane.ERROR_MESSAGE);
            cmbTipo.requestFocus();
        }
        else if (acceso.equals("Seleccione un perfil ...")){
            JOptionPane.showMessageDialog(null, "Falta  llenar el campo de acceso ", "Atención", JOptionPane.ERROR_MESSAGE);
            cmbacceso.requestFocus();
        }
        else {
            String registro = "---" + codigo + "," + nombre + "," + proceso + "," + tipoExp
            + "," + descripcion + "," + acceso;

            nuevoComponente(registro);

            String miFila[] = {codigo, nombre, proceso, tipoExp, acceso};
            DefaultTableModel miTabla = (DefaultTableModel) this.tblComponentes.getModel();
            miTabla.addRow(miFila);

            JOptionPane.showMessageDialog(null, "El componente fue registrado con exito");

            btnNuevoActionPerformed(evt);

            estComponente p = new estComponente();

            p.codigo = codigo;
            p.nombre = nombre;
            p.proceso = proceso;
            p.tipoExp = tipoExp;
            p.descripcion = descripcion;
            p.acceso = acceso;

            ult.liga = p;
            ult = p;
        }
    }//GEN-LAST:event_btnRegistrarActionPerformed

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
        camposArticulos();
        botones(false);
        btnRegistrar.setEnabled(true);
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void txtCodigoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodigoKeyTyped
        validar.soloNumeros(evt);
    }//GEN-LAST:event_txtCodigoKeyTyped

    private void pnlTituloComMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlTituloComMouseMoved

    }//GEN-LAST:event_pnlTituloComMouseMoved

    private void cmbaccesoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbaccesoItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbaccesoItemStateChanged

    private void cmbaccesoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbaccesoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbaccesoActionPerformed

            //Procedimiento para dar colores al formulario
    private void formColores (String color1, String color2, String color3) 
    {
        this.getContentPane().setBackground(new Color(Integer.parseInt(color2, 16)));
        pnlFormulario.setBackground(new Color(Integer.parseInt(color1, 16)));
        pnlTabla.setBackground(new Color(Integer.parseInt(color1, 16)));
        tbpCrudComponentes.setBackground(new Color(Integer.parseInt(color1, 16)));
        
        pnlTituloCom.setBackground(new Color(Integer.parseInt(color2, 16)));
        lbTituloArt.setForeground(new Color(Integer.parseInt(color3, 16)));
        
        pnlTituloTabla.setBackground(new Color(Integer.parseInt(color2, 16)));
        lbTituloTabla.setForeground(new Color(Integer.parseInt(color3, 16)));
    }   
    
    private void llenarTabla ()
    {  
        DefaultTableModel miModelo = (DefaultTableModel)this.tblComponentes.getModel();
        
        ArrayList<Object[]> data = new ArrayList<>();
        
        estComponente p = cab;
        
        while (p != null) {
            String[] datos = {p.codigo, p.nombre, p.proceso, p.tipoExp, p.acceso};
            data.add(datos);
            p = p.liga;
        }

        for (int i = 0; i < data.size(); i++) {
            miModelo.addRow(data.get(i));
        }
        
        tblComponentes.setRowHeight(25);
    }
    
    public void botones (boolean a)
    {
        btnModificar.setEnabled(a);
        btnEliminar.setEnabled(a);
    }
    
    private void camposArticulos () {
        txtCodigo.setText("");
        cmbacceso.setSelectedIndex(0);
        cmbPro.setSelectedIndex(0);
        cmbTipo.setSelectedIndex(0);
        txtNombre.setText("");
        txtDescripcion.setText(null);

        txtCodigo.setEditable(true);
    }
        
    
    private void cargarDatos() {
        try {
            File f = new File("E:/componentes.in");
            BufferedReader entrada;
            entrada = new BufferedReader(new FileReader(f));
            String[] nodos = entrada.readLine().split("---"), valores;

            estComponente p;

            for (int i = 0; i < nodos.length; i++) {
                p = new estComponente();

                if (p == null) {
                    System.out.println("Memoria llena");
                } else {
                    valores = nodos[i].split(",");
                   
                    p.codigo = valores[0];
                    p.nombre = valores[1];
                    p.proceso = valores[2];
                    p.tipoExp = valores[3];
                    p.descripcion = valores[4];
                    p.acceso = valores[5];

                    if (cab == null) {
                        cab = p;
                    } else {
                        ult.liga = p;
                    }
                    ult = p;
                }
            }
        } catch (IOException e) {
            System.out.println("Error: " + e);
        }
    }
    
    private estComponente consultarComponente(String componente) {
        estComponente p = cab;

        while (p != null) {
            if (p.codigo.equals(componente)) {
                return p;
            }
            p = p.liga;
        }
        return null;
    }

    
    private void nuevoComponente(String registro) {
        File f;
        f = new File("E:/componentes.in");
        try {
            FileWriter fw = new FileWriter(f, true);
            fw.append(registro);
            fw.close();
        } catch (IOException e) {
        };
    }
    
    private void modRegistro() 
    {
        estComponente p = cab;
        String registro = "---";
        
        File f = new File("E:/componentes.in");
        
        try {
            Writer output = new BufferedWriter(new FileWriter(f));
            try {
                output.write("");
            }
            finally {
                output.close();
            }
        }
        catch (IOException e){}
        
        if (p == null) {
            System.out.println("Lista vacia");
        } 
        else {
            while (p != null) {
                
                if (p == cab){
                    registro = "";
                }
                
                registro += p.codigo + "," + p.nombre + "," + p.proceso + "," + p.tipoExp
                    + "," + p.descripcion + "," + p.acceso;
                
                nuevoComponente(registro);
                registro = "---";
                p = p.liga;
            }
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JButton btnRegistrar;
    private javax.swing.JComboBox cmbPro;
    private javax.swing.JComboBox cmbTipo;
    private javax.swing.JComboBox cmbacceso;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lbCantidad;
    private javax.swing.JLabel lbCodigo;
    private javax.swing.JLabel lbDescripcion;
    private javax.swing.JLabel lbNombre;
    private javax.swing.JLabel lbTipo;
    private javax.swing.JLabel lbTituloArt;
    private javax.swing.JLabel lbTituloTabla;
    private javax.swing.JLabel lbUbicacion;
    private javax.swing.JPanel pnlBotonesArticulo;
    private javax.swing.JPanel pnlFormulario;
    private javax.swing.JPanel pnlTabla;
    private javax.swing.JPanel pnlTituloCom;
    private javax.swing.JPanel pnlTituloTabla;
    private javax.swing.JTable tblComponentes;
    private javax.swing.JTabbedPane tbpCrudComponentes;
    private javax.swing.JTextField txtCodigo;
    private javax.swing.JTextPane txtDescripcion;
    private javax.swing.JTextField txtFiltrador;
    private javax.swing.JTextField txtNombre;
    // End of variables declaration//GEN-END:variables
}
