package formularios;

import java.awt.Color;
import javax.swing.table.DefaultTableModel;
import clases.SQL;
import clases.listas.estUsuario;
import java.io.*;
import java.util.ArrayList;
import java.util.Calendar;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.TableRowSorter;

public class IfrmCrudUsuarios extends javax.swing.JInternalFrame {

    SQL sql = new SQL();
    validacionesCampos validar = new validacionesCampos();
    static estUsuario cab = null, ult = null;

    public IfrmCrudUsuarios() {

        initComponents();
        formColores("FFFFFF", "6699ff", "FFFFFF");
        tbpSolicitud.setTabPlacement(tbpSolicitud.BOTTOM);

        txtDocSolicitante.requestFocus();
        camposSolicitanteOk();
        contrasenas(false);
        cargarDatos();
        llenarTabla();
        botones(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tbpSolicitud = new javax.swing.JTabbedPane();
        pnlTabla = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblUsuarios = new javax.swing.JTable();
        pnlTituloTabla = new javax.swing.JPanel();
        lbTituloTabla = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        txtFiltrador = new javax.swing.JTextField();
        pnlSolicitante = new javax.swing.JPanel();
        txtEstado = new javax.swing.JTextField();
        lbEmail = new javax.swing.JLabel();
        lbPerfil = new javax.swing.JLabel();
        lbEstado = new javax.swing.JLabel();
        txtDocSolicitante = new javax.swing.JTextField();
        txtNombres = new javax.swing.JTextField();
        lbApellidos = new javax.swing.JLabel();
        lbDocSolicitante = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        txtApellidos = new javax.swing.JTextField();
        lbNombres = new javax.swing.JLabel();
        pnlBotonesSolicitante = new javax.swing.JPanel();
        btnRegistrar = new javax.swing.JButton();
        btnNuevo = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        pnlTitulo = new javax.swing.JPanel();
        lbTitulo = new javax.swing.JLabel();
        cmbPerfil = new javax.swing.JComboBox();
        lbContrasena = new javax.swing.JLabel();
        txtContrasena = new javax.swing.JPasswordField();
        lbConfirmacion = new javax.swing.JLabel();
        txtConfirmacion = new javax.swing.JPasswordField();
        lbFecha = new javax.swing.JLabel();
        txtFecha = new javax.swing.JTextField();

        tbpSolicitud.setFont(new java.awt.Font("Agency FB", 1, 16)); // NOI18N
        tbpSolicitud.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                tbpSolicitudMouseMoved(evt);
            }
        });

        pnlTabla.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                pnlTablaMouseMoved(evt);
            }
        });

        tblUsuarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Usuario", "Nombres", "Apellidos", "Perfil"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblUsuarios);

        pnlTituloTabla.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                pnlTituloTablaMouseMoved(evt);
            }
        });

        lbTituloTabla.setFont(new java.awt.Font("Agency FB", 1, 70)); // NOI18N
        lbTituloTabla.setText("Usuarios");

        javax.swing.GroupLayout pnlTituloTablaLayout = new javax.swing.GroupLayout(pnlTituloTabla);
        pnlTituloTabla.setLayout(pnlTituloTablaLayout);
        pnlTituloTablaLayout.setHorizontalGroup(
            pnlTituloTablaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTituloTablaLayout.createSequentialGroup()
                .addGap(186, 186, 186)
                .addComponent(lbTituloTabla)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlTituloTablaLayout.setVerticalGroup(
            pnlTituloTablaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTituloTablaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbTituloTabla, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jButton1.setFont(new java.awt.Font("Agency FB", 1, 18)); // NOI18N
        jButton1.setText("Transferir al formulario");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        txtFiltrador.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtFiltradorKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout pnlTablaLayout = new javax.swing.GroupLayout(pnlTabla);
        pnlTabla.setLayout(pnlTablaLayout);
        pnlTablaLayout.setHorizontalGroup(
            pnlTablaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addComponent(pnlTituloTabla, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlTablaLayout.createSequentialGroup()
                .addContainerGap(79, Short.MAX_VALUE)
                .addComponent(txtFiltrador, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(jButton1)
                .addContainerGap())
        );
        pnlTablaLayout.setVerticalGroup(
            pnlTablaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlTablaLayout.createSequentialGroup()
                .addComponent(pnlTituloTabla, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 195, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlTablaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtFiltrador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8))
        );

        tbpSolicitud.addTab("Tabla", pnlTabla);

        lbEmail.setFont(new java.awt.Font("Agency FB", 1, 20)); // NOI18N
        lbEmail.setText("*E-mail");

        lbPerfil.setFont(new java.awt.Font("Agency FB", 1, 20)); // NOI18N
        lbPerfil.setText("*Perfil");

        lbEstado.setFont(new java.awt.Font("Agency FB", 1, 20)); // NOI18N
        lbEstado.setText("*Estado");

        txtDocSolicitante.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDocSolicitanteActionPerformed(evt);
            }
        });
        txtDocSolicitante.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDocSolicitanteKeyTyped(evt);
            }
        });

        txtNombres.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNombresKeyTyped(evt);
            }
        });

        lbApellidos.setFont(new java.awt.Font("Agency FB", 1, 20)); // NOI18N
        lbApellidos.setText("*Apellidos");

        lbDocSolicitante.setFont(new java.awt.Font("Agency FB", 1, 20)); // NOI18N
        lbDocSolicitante.setText("*Documento");

        txtApellidos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtApellidosKeyTyped(evt);
            }
        });

        lbNombres.setFont(new java.awt.Font("Agency FB", 1, 20)); // NOI18N
        lbNombres.setText("*Nombres");

        pnlBotonesSolicitante.setBackground(new java.awt.Color(255, 255, 255));

        btnRegistrar.setFont(new java.awt.Font("Agency FB", 1, 17)); // NOI18N
        btnRegistrar.setText("Registrar");
        btnRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarActionPerformed(evt);
            }
        });

        btnNuevo.setFont(new java.awt.Font("Agency FB", 1, 17)); // NOI18N
        btnNuevo.setText("Nuevo");
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });

        btnModificar.setFont(new java.awt.Font("Agency FB", 1, 17)); // NOI18N
        btnModificar.setText("Modificar");
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        btnEliminar.setFont(new java.awt.Font("Agency FB", 1, 17)); // NOI18N
        btnEliminar.setText("Inactivar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlBotonesSolicitanteLayout = new javax.swing.GroupLayout(pnlBotonesSolicitante);
        pnlBotonesSolicitante.setLayout(pnlBotonesSolicitanteLayout);
        pnlBotonesSolicitanteLayout.setHorizontalGroup(
            pnlBotonesSolicitanteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBotonesSolicitanteLayout.createSequentialGroup()
                .addComponent(btnNuevo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnRegistrar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnModificar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnEliminar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnlBotonesSolicitanteLayout.setVerticalGroup(
            pnlBotonesSolicitanteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBotonesSolicitanteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(btnNuevo)
                .addComponent(btnRegistrar)
                .addComponent(btnModificar)
                .addComponent(btnEliminar))
        );

        pnlTitulo.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                pnlTituloMouseMoved(evt);
            }
        });

        lbTitulo.setFont(new java.awt.Font("Agency FB", 1, 70)); // NOI18N
        lbTitulo.setText("Solicitante");

        javax.swing.GroupLayout pnlTituloLayout = new javax.swing.GroupLayout(pnlTitulo);
        pnlTitulo.setLayout(pnlTituloLayout);
        pnlTituloLayout.setHorizontalGroup(
            pnlTituloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTituloLayout.createSequentialGroup()
                .addGap(159, 159, 159)
                .addComponent(lbTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(175, Short.MAX_VALUE))
        );
        pnlTituloLayout.setVerticalGroup(
            pnlTituloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTituloLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        cmbPerfil.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione un perfil ...", "Abogado", "AbogadoTitular", "Administrador","Emplleados","Clientes" }));
        cmbPerfil.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbPerfilItemStateChanged(evt);
            }
        });
        cmbPerfil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbPerfilActionPerformed(evt);
            }
        });

        lbContrasena.setFont(new java.awt.Font("Agency FB", 1, 20)); // NOI18N
        lbContrasena.setText("*Contraseña");

        lbConfirmacion.setFont(new java.awt.Font("Agency FB", 1, 20)); // NOI18N
        lbConfirmacion.setText("Confirmación contraseña");

        lbFecha.setFont(new java.awt.Font("Agency FB", 1, 20)); // NOI18N
        lbFecha.setText("*Fecha  de registro");

        txtFecha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFechaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlSolicitanteLayout = new javax.swing.GroupLayout(pnlSolicitante);
        pnlSolicitante.setLayout(pnlSolicitanteLayout);
        pnlSolicitanteLayout.setHorizontalGroup(
            pnlSolicitanteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlTitulo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(pnlSolicitanteLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(pnlSolicitanteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pnlSolicitanteLayout.createSequentialGroup()
                        .addGroup(pnlSolicitanteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbDocSolicitante)
                            .addComponent(lbNombres)
                            .addComponent(lbApellidos)
                            .addComponent(lbEmail))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(pnlSolicitanteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtEmail)
                            .addComponent(txtApellidos)
                            .addComponent(txtDocSolicitante, javax.swing.GroupLayout.DEFAULT_SIZE, 177, Short.MAX_VALUE)
                            .addComponent(txtNombres, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(35, 35, 35)
                        .addGroup(pnlSolicitanteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlSolicitanteLayout.createSequentialGroup()
                                .addComponent(lbFecha)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlSolicitanteLayout.createSequentialGroup()
                                .addGroup(pnlSolicitanteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lbPerfil)
                                    .addComponent(lbEstado))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(pnlSolicitanteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(cmbPerfil, 0, 130, Short.MAX_VALUE)
                                    .addComponent(txtEstado)))))
                    .addGroup(pnlSolicitanteLayout.createSequentialGroup()
                        .addComponent(lbContrasena)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtContrasena, javax.swing.GroupLayout.DEFAULT_SIZE, 157, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lbConfirmacion, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(23, 23, 23)
                        .addComponent(txtConfirmacion, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlSolicitanteLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(pnlBotonesSolicitante, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(123, 123, 123))
        );
        pnlSolicitanteLayout.setVerticalGroup(
            pnlSolicitanteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSolicitanteLayout.createSequentialGroup()
                .addComponent(pnlTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(pnlSolicitanteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlSolicitanteLayout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(pnlSolicitanteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(pnlSolicitanteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtDocSolicitante, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lbPerfil, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(lbDocSolicitante, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(pnlSolicitanteLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(cmbPerfil, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlSolicitanteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlSolicitanteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lbNombres, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtNombres, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlSolicitanteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lbEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlSolicitanteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlSolicitanteLayout.createSequentialGroup()
                        .addGroup(pnlSolicitanteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtApellidos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbApellidos, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(pnlSolicitanteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(lbFecha)
                    .addComponent(txtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlSolicitanteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtConfirmacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlSolicitanteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(lbContrasena, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtContrasena, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lbConfirmacion, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlBotonesSolicitante, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(31, Short.MAX_VALUE))
        );

        tbpSolicitud.addTab("Formulario", pnlSolicitante);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(tbpSolicitud, javax.swing.GroupLayout.PREFERRED_SIZE, 604, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(tbpSolicitud, javax.swing.GroupLayout.PREFERRED_SIZE, 397, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 44, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void pnlTituloTablaMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlTituloTablaMouseMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_pnlTituloTablaMouseMoved

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        String codigo = String.valueOf(tblUsuarios.getValueAt(tblUsuarios.getSelectedRow(), 0));

        estUsuario nodoUsuario = consultarUsuario(codigo);

        if (codigo.equals("")) {
            JOptionPane.showMessageDialog(null, "Debe seleccionar un registro de la tabla", "Atencion", JOptionPane.ERROR_MESSAGE);
            txtDocSolicitante.requestFocus();
        } 
        else if (nodoUsuario != null) {
            txtDocSolicitante.setText(codigo);
            txtNombres.setText(nodoUsuario.nombre);
            txtApellidos.setText(nodoUsuario.apellido);
            txtEmail.setText(nodoUsuario.email);
            //txtDpto.setText(nodoUsuario.departamento);
            cmbPerfil.setSelectedItem(nodoUsuario.perfil);
            txtEstado.setText(nodoUsuario.estado);
            txtFecha.setText(nodoUsuario.fecha);

            camposSolicitanteOk();

            tbpSolicitud.setSelectedIndex(1);
            contrasenas(false);
            botones(true);
            btnRegistrar.setEnabled(false);
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void txtFiltradorKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFiltradorKeyReleased

        DefaultTableModel modelo = (DefaultTableModel) tblUsuarios.getModel();
        TableRowSorter sorter = new TableRowSorter(modelo);
        tblUsuarios.setRowSorter(sorter);
        sorter.setRowFilter(RowFilter.regexFilter("(?i)^" + txtFiltrador.getText(), 0));

    }//GEN-LAST:event_txtFiltradorKeyReleased

    private void pnlTablaMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlTablaMouseMoved
    }//GEN-LAST:event_pnlTablaMouseMoved

    private void btnRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarActionPerformed

        String Usuario = txtDocSolicitante.getText();
        String Nombres = txtNombres.getText();
        String Apellidos = txtApellidos.getText();
        String Email = txtEmail.getText();
        //String Departamento = txtDpto.getText();
        String Perfil = (String) cmbPerfil.getSelectedItem();
        String contrasena = txtContrasena.getText();
        String confirmacion = txtConfirmacion.getText();

        if (consultarUsuario(Usuario) != null) {
            JOptionPane.showMessageDialog(null, "El usuario ya está registrado", "Atencion", JOptionPane.ERROR_MESSAGE);
            txtDocSolicitante.requestFocus();
        } 
        else if (Usuario.equals("")) {
            JOptionPane.showMessageDialog(null, "Falta  llenar el campo del documento", "Atencion", JOptionPane.ERROR_MESSAGE);
            txtDocSolicitante.requestFocus();
        } 
        else if (Nombres.equals("")) {
            JOptionPane.showMessageDialog(null, "Falta  llenar el campo de nombres", "Atencion", JOptionPane.ERROR_MESSAGE);
            txtNombres.requestFocus();
        } 
        else if (Apellidos.equals("")) {
            JOptionPane.showMessageDialog(null, "Falta  llenar el campo de apellidos", "Atencion", JOptionPane.ERROR_MESSAGE);
            txtApellidos.requestFocus();
        } 
        else if (Email.equals("")) {
            JOptionPane.showMessageDialog(null, "Falta  llenar el campo del e-mail", "Atencion", JOptionPane.ERROR_MESSAGE);
            txtEmail.requestFocus();
        } 
        else if (cmbPerfil.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(null, "Seleccione un perfil", "Atencion", JOptionPane.ERROR_MESSAGE);
            cmbPerfil.requestFocus();
        } 
       //else if (Departamento.equals("")) {
         //JOptionPane.showMessageDialog(null, "Falta  llenar el campo del departamento", "Atencion", JOptionPane.ERROR_MESSAGE);
            //txtDpto.requestFocus();
        //} 
        else if (contrasena.equals("") && txtContrasena.isVisible()) {
            JOptionPane.showMessageDialog(null, "Falta ingresar la contraseña", "Atencion", JOptionPane.ERROR_MESSAGE);
            txtContrasena.requestFocus();
        } 
        else if (!contrasena.equals(confirmacion) && txtContrasena.isVisible()) {
            JOptionPane.showMessageDialog(null, "Las contraseñas no coinciden", "Atencion", JOptionPane.ERROR_MESSAGE);
            txtConfirmacion.requestFocus();
        } 
        else {
            String registro = "---" + Usuario + "," + contrasena + "," + Nombres + "," + Apellidos
                    + "," + Email + "," + "," + Perfil + "," + "Activo" + "," + fecha();

            nuevoUsuario(registro);

            JOptionPane.showMessageDialog(null, "El usuario fue registrado con exito");

            btnNuevoActionPerformed(evt);

            String miFila[] = {Usuario, Nombres, Apellidos, Perfil};

            DefaultTableModel miTabla = (DefaultTableModel) this.tblUsuarios.getModel();
            miTabla.addRow(miFila);


            estUsuario p = new estUsuario();

            p.usuario = Usuario;
            p.contrasena = contrasena;
            p.nombre = Nombres;
            p.apellido = Apellidos;
            p.email = Email;
           // p.departamento = Departamento;
            p.perfil = Perfil;
            p.estado = "Activo";
            p.fecha = fecha();

            ult.liga = p;
            ult = p;
        }
    }//GEN-LAST:event_btnRegistrarActionPerformed

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
        limpiarCampos();
        txtEstado.setText("Activo");
        contrasenas(false);
        botones(false);
        btnRegistrar.setEnabled(true);
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed

        String Usuario = txtDocSolicitante.getText();
        String Nombres = txtNombres.getText();
        String Apellidos = txtApellidos.getText();
        String Email = txtEmail.getText();
       // String Departamento = txtDpto.getText();
        String Perfil = (String) cmbPerfil.getSelectedItem();
        String contrasena = txtContrasena.getText();
        String confirmacion = txtConfirmacion.getText();

        if (Nombres.equals("")) {
            JOptionPane.showMessageDialog(null, "Falta  llenar el campo de nombres", "Atencion", JOptionPane.ERROR_MESSAGE);
            txtNombres.requestFocus();
        } 
        else if (Apellidos.equals("")) {
            JOptionPane.showMessageDialog(null, "Falta  llenar el campo de apellidos", "Atencion", JOptionPane.ERROR_MESSAGE);
            txtApellidos.requestFocus();
        } 
        else if (Email.equals("")) {
            JOptionPane.showMessageDialog(null, "Falta  llenar el campo del e-mail", "Atencion", JOptionPane.ERROR_MESSAGE);
            txtEmail.requestFocus();
        } 
        else if (cmbPerfil.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(null, "Seleccione un perfil", "Atencion", JOptionPane.ERROR_MESSAGE);
            cmbPerfil.requestFocus();
        } 
       /* else if (Departamento.equals("")) {
            JOptionPane.showMessageDialog(null, "Falta  llenar el campo del departamento", "Atencion", JOptionPane.ERROR_MESSAGE);
            txtDpto.requestFocus();
        } */
        else if (cmbPerfil.getSelectedIndex() != 1 && !contrasena.equals(confirmacion)) {
            JOptionPane.showMessageDialog(null, "Las contraseñas no coinciden", "Atencion", JOptionPane.ERROR_MESSAGE);
            txtConfirmacion.requestFocus();
        } 
        else {
            if (cmbPerfil.getSelectedIndex() != 1 && contrasena.equals("")) {
                int option = JOptionPane.showConfirmDialog(rootPane, "¿Desea cambiar la contraseña?");

                if (option == JOptionPane.NO_OPTION) {

                    btnNuevoActionPerformed(evt);

                    String miFila[] = {Usuario, Nombres, Apellidos, Perfil};

                    DefaultTableModel miTabla = (DefaultTableModel) this.tblUsuarios.getModel();
                    miTabla.removeRow(tblUsuarios.getSelectedRow());
                    miTabla.addRow(miFila);

                    estUsuario p = consultarUsuario(Usuario);

                    p.usuario = Usuario;
                    p.nombre = Nombres;
                    p.apellido = Apellidos;
                    p.email = Email;
                   // p.departamento = Departamento;
                    p.perfil = Perfil;
                    p.estado = "Activo";
                    p.fecha = fecha();

                    modRegistro();

                    contrasenas(false);
                    txtContrasena.setVisible(false);
                    txtConfirmacion.setVisible(false);
                }
                if (option == JOptionPane.YES_OPTION) {
                    contrasenas(true);
                }
            } 
            else {
                btnNuevoActionPerformed(evt);

                String miFila[] = {Usuario, Nombres, Apellidos, Perfil};

                DefaultTableModel miTabla = (DefaultTableModel) this.tblUsuarios.getModel();
                miTabla.removeRow(tblUsuarios.getSelectedRow());
                miTabla.addRow(miFila);

                estUsuario p = consultarUsuario(Usuario);

                p.usuario = Usuario;
                p.contrasena = contrasena;
                p.nombre = Nombres;
                p.apellido = Apellidos;
                p.email = Email;
               // p.departamento = Departamento;
                p.perfil = Perfil;
                p.estado = "Activo";
                p.fecha = fecha();

                modRegistro();

                JOptionPane.showMessageDialog(null, "El usuario fue modificado con exito");

                contrasenas(false);
                txtContrasena.setVisible(false);
                txtConfirmacion.setVisible(false);
            }
        }

    }//GEN-LAST:event_btnModificarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
 
        String Usuario = txtDocSolicitante.getText();

        int option = JOptionPane.showConfirmDialog(rootPane, "¿Está seguro de que desea cambiar el estado del usuario?");

        if (option == JOptionPane.YES_OPTION) {
            estUsuario p = consultarUsuario(Usuario);
            p.estado = "Inactivo";
            modRegistro();
            txtEstado.setText("Inactivo");
        }

    }//GEN-LAST:event_btnEliminarActionPerformed

    private void pnlTituloMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlTituloMouseMoved
    }//GEN-LAST:event_pnlTituloMouseMoved

    private void cmbPerfilItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbPerfilItemStateChanged

        switch (cmbPerfil.getSelectedIndex()) {
            case 2:
                contrasenas(true);
                break;
            case 3:
                contrasenas(true);
                break;
            default:
                contrasenas(false);
                break;
        }

    }//GEN-LAST:event_cmbPerfilItemStateChanged

    private void tbpSolicitudMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbpSolicitudMouseMoved
    }//GEN-LAST:event_tbpSolicitudMouseMoved

    private void txtDocSolicitanteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDocSolicitanteKeyTyped
        validar.soloNumeros(evt);
    }//GEN-LAST:event_txtDocSolicitanteKeyTyped

    private void txtNombresKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombresKeyTyped
        validar.soloLetras(evt);
    }//GEN-LAST:event_txtNombresKeyTyped

    private void txtApellidosKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtApellidosKeyTyped
        validar.soloLetras(evt);
    }//GEN-LAST:event_txtApellidosKeyTyped

    private void cmbPerfilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbPerfilActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbPerfilActionPerformed

    private void txtDocSolicitanteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDocSolicitanteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDocSolicitanteActionPerformed

    private void txtFechaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFechaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFechaActionPerformed

    //Procedimiento para dar colores al formulario
    private void formColores(String color1, String color2, String color3) {
        this.getContentPane().setBackground(new Color(Integer.parseInt(color2, 16)));
        pnlSolicitante.setBackground(new Color(Integer.parseInt(color1, 16)));
        pnlTabla.setBackground(new Color(Integer.parseInt(color1, 16)));
        tbpSolicitud.setBackground(new Color(Integer.parseInt(color1, 16)));

        pnlTitulo.setBackground(new Color(Integer.parseInt(color2, 16)));
        lbTitulo.setForeground(new Color(Integer.parseInt(color3, 16)));

        pnlTituloTabla.setBackground(new Color(Integer.parseInt(color2, 16)));
        lbTituloTabla.setForeground(new Color(Integer.parseInt(color3, 16)));
    }

    private void camposSolicitanteOk()
    {
        txtEstado.setEditable(false);
        txtFecha.setEditable(false);
        txtDocSolicitante.setEditable(false);
    }

    private void limpiarCampos() {

        txtDocSolicitante.setText("");
        txtNombres.setText("");
        txtApellidos.setText("");
        txtEmail.setText("");
        //txtDpto.setText("");
        cmbPerfil.setSelectedIndex(0);
        txtEstado.setText("");
        txtContrasena.setText("");
        txtConfirmacion.setText("");

        txtFecha.setText(fecha());
        txtDocSolicitante.setEditable(true);
    }

    private String fecha() {
        Calendar Calendario = Calendar.getInstance();

        String anho = Integer.toString(Calendario.get(Calendar.YEAR));
        String mes = Integer.toString(Calendario.get(Calendar.MONTH) + 1);
        String dia = Integer.toString(Calendario.get(Calendar.DATE));

        return (dia + "/" + "0" + mes + "/" + anho);
    }

    private void llenarTabla() {
        DefaultTableModel miModelo = (DefaultTableModel) this.tblUsuarios.getModel();

        ArrayList<String[]> data = new ArrayList<>();

        estUsuario p = cab;

        while (p != null) {
            String[] datos = {p.usuario, p.nombre, p.apellido, p.perfil};
            data.add(datos);
            p = p.liga;
        }

        for (int i = 0; i < data.size(); i++) {
            miModelo.addRow(data.get(i));
        }

        tblUsuarios.setRowHeight(25);
        
        miModelo.removeRow(0);
    }

    private void contrasenas(boolean a) {
        lbConfirmacion.setVisible(a);
        lbContrasena.setVisible(a);
        txtConfirmacion.setVisible(a);
        txtContrasena.setVisible(a);
    }

    public void botones(boolean a) {
        btnRegistrar.setEnabled(a);
        btnModificar.setEnabled(a);
        btnEliminar.setEnabled(a);
    }

    private void cargarDatos() {
        try {
            File f = new File("E:/usuarios.in");
            BufferedReader entrada;
            entrada = new BufferedReader(new FileReader(f));
            String[] nodos = entrada.readLine().split("---"), valores;

            estUsuario p;

            for (int i = 0; i < nodos.length; i++) {
                p = new estUsuario();

                if (p == null) {
                    System.out.println("Memoria llena");
                } else {
                    valores = nodos[i].split(",");

                    p.usuario = valores[0];
                    p.contrasena = valores[1];
                    p.nombre = valores[2];
                    p.apellido = valores[3];
                    p.email = valores[4];
                   // p.departamento = valores[5];
                    p.perfil = valores[5];
                    p.estado = valores[6];
                    p.fecha = valores[7];

                    if (cab == null) {
                        cab = p;
                    } else {
                        ult.liga = p;
                    }
                    ult = p;
                }
            }
        } catch (IOException e) {
            System.out.println("Error: " + e);
        }
    }

    private estUsuario consultarUsuario(String usuario) {
        estUsuario p = cab;

        while (p != null) {
            if (p.usuario.equals(usuario)) {
                return p;
            }
            p = p.liga;
        }
        return null;
    }

    private void nuevoUsuario(String registro) 
    {
        File f;
        f = new File("E/usuarios.in");
        try {
            FileWriter fw = new FileWriter(f, true);
            fw.append(registro);
            fw.close();
        } catch (IOException e) {
        };
    }

    private void modRegistro() 
    {
        estUsuario p = cab;
        String registro = "---";
        
        File f = new File("E:/usuarios.in");
        
        try {
            Writer output = new BufferedWriter(new FileWriter(f));
            try {
                output.write("");
            }
            finally {
                output.close();
            }
        }
        catch (IOException e){}
        
        if (p == null) {
            System.out.println("Lista vacia");
        } 
        else {
            while (p != null) {
                
                if (p == cab){
                    registro = "";
                }
                
                registro += p.usuario + "," + p.contrasena + "," + p.nombre + "," + p.apellido
                        + "," + p.email + ","  + p.perfil + "," + "Activo" + ","
                        + fecha();
                nuevoUsuario(registro);
                registro = "---";
                p = p.liga;
            }
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JButton btnRegistrar;
    private javax.swing.JComboBox cmbPerfil;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbApellidos;
    private javax.swing.JLabel lbConfirmacion;
    private javax.swing.JLabel lbContrasena;
    private javax.swing.JLabel lbDocSolicitante;
    private javax.swing.JLabel lbEmail;
    private javax.swing.JLabel lbEstado;
    private javax.swing.JLabel lbFecha;
    private javax.swing.JLabel lbNombres;
    private javax.swing.JLabel lbPerfil;
    private javax.swing.JLabel lbTitulo;
    private javax.swing.JLabel lbTituloTabla;
    private javax.swing.JPanel pnlBotonesSolicitante;
    private javax.swing.JPanel pnlSolicitante;
    private javax.swing.JPanel pnlTabla;
    private javax.swing.JPanel pnlTitulo;
    private javax.swing.JPanel pnlTituloTabla;
    private javax.swing.JTable tblUsuarios;
    private javax.swing.JTabbedPane tbpSolicitud;
    private javax.swing.JTextField txtApellidos;
    private javax.swing.JPasswordField txtConfirmacion;
    private javax.swing.JPasswordField txtContrasena;
    private javax.swing.JTextField txtDocSolicitante;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtEstado;
    private javax.swing.JTextField txtFecha;
    private javax.swing.JTextField txtFiltrador;
    private javax.swing.JTextField txtNombres;
    // End of variables declaration//GEN-END:variables
}
